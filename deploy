#!/bin/bash

ABIDIR=""
NETWORK="localhost"
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
VERSIONTYPE="patch"
OMITVERSION="0"

while [[ "$#" -gt 0 ]]; do
  case $1 in
  -n | --network)
    NETWORK=$2
    ;;
  -t | --type)
    VERSIONTYPE=$2
    ;;
  -o | --omit-version)
    OMITVERSION="1"
    ;;
  esac
  shift
done

# Get the list of branches from the repository
BRANCHES=$(git branch --format='%(refname:short)')
select BRANCH in $BRANCHES; do
  if [ ! -z "$BRANCH" ]; then
    break
  fi
done

# Checkout the selected branch and install npm dependencies
git checkout $BRANCH
npm ci -q --no-progress

# Compile project
npx hardhat compile --force

if [[ "$OMITVERSION" -eq 0 ]]; then
  source ./tag-release -b "$BRANCH" -t "$VERSIONTYPE" -n
fi

# Run script to deploy the contracts
npx hardhat run --network "$NETWORK" scripts/deploy.js "$TAGVERSION"

if [[ $NETWORK == "mainnet" || $NETWORK == "goerli" ]]; then

  # Update .openzeppelin metadata
  git add .openzeppelin/"$NETWORK".json
  git commit -m "Update .openzeppelin folder"
  git push -u origin $branch

  if [[ $BRANCH == "stage" || $BRANCH == "main" ]]; then
    source ./tag-release -b "$BRANCH" -t "$VERSIONTYPE"
    ABIDIR="docs/$NETWORK/abi/$TAGVERSION"
  else
    ABIDIR="docs/$NETWORK/abi/untagged"
  fi

  git checkout gh-pages

  # Publish the ABI to a specific GitHub Pages location
  mkdir -p $ABIDIR
  cp abi/*.json $ABIDIR

  git add $ABIDIR
  git commit -m "Publish ABI for deployment to $NETWORK"
  git push -u -f origin gh-pages
fi

git checkout $CURRENT_BRANCH
